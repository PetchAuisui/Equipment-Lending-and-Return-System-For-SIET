"""# app/models/equipment.py
from datetime import datetime
from sqlalchemy import Column, Integer, String, Text, Date, DateTime
from sqlalchemy.orm import relationship
from app.db.db import Base


class Equipment(Base):
    __tablename__ = "equipments"
    __table_args__ = {"extend_existing": True}  # ‡∏ñ‡πâ‡∏≤ table ‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç/‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á table ‡πÄ‡∏î‡∏¥‡∏° ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà

    equipment_id = Column(Integer, primary_key=True, autoincrement=True)
    name         = Column(String(255), nullable=False)   # ‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
    code         = Column(String(100), unique=True, nullable=False)  # ‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
    category     = Column(String(100))                   # ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    detail       = Column(Text)                          # ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
    brand        = Column(String(100))                   # ‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠
    buy_date     = Column(Date)                          # ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ã‡∏∑‡πâ‡∏≠
    status       = Column(String(50))                    # ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ‡πÄ‡∏ä‡πà‡∏ô available, borrowed

    created_at   = Column(DateTime, default=datetime.utcnow)

    movements = relationship("StockMovement", back_populates="equipment", cascade="all, delete-orphan")

    # üîó ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á EquipmentImage
    images = relationship(
        "EquipmentImage",
        back_populates="equipment",
        cascade="all, delete-orphan",
        lazy="selectin",
        passive_deletes=True
    )

    def __repr__(self):
        return f"<Equipment id={self.equipment_id} code={self.code} name={self.name}>"
"""
# app/models/equipment.py
"""
Shortcut: import Equipment model from central location
"""
from app.db.models import Equipment
