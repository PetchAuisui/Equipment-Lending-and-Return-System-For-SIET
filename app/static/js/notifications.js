// üß† ‡πÅ‡∏õ‡∏•‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
function translateTemplate(template) {
  switch (template) {
    case "overdue":
      return "‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î";
    case "due_now":
      return "‡πÉ‡∏Å‡∏•‡πâ‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î";
    case "due_tomorrow":
      return "‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ß‡∏±‡∏ô‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ";
    default:
      return "‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô";
  }
}


// üîÑ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
async function loadNotifications() {
  const res = await fetch("/api/notifications/unread");
  const data = await res.json();

  const bell = document.getElementById("notifBell");
  const count = document.getElementById("notifCount");
  const list = document.getElementById("notifList");

  if (!bell || !count || !list) return;

  // üßÆ badge ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
  if (data.length > 0) {
    count.textContent = data.length;
    count.classList.remove("d-none");
  } else {
    count.classList.add("d-none");
  }

  // üßæ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
  list.innerHTML = "";
  if (data.length === 0) {
    list.innerHTML = `<div class="empty-msg">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà</div>`;
    return;
  }

  data.forEach((n) => {
    const div = document.createElement("div");
    div.className = "notification-card";
    div.dataset.type = n.template;
    div.innerHTML = `
      <button class="notification-close" onclick="dismissNotification(${n.id})">&times;</button>
      <div class="d-flex align-items-center mb-1">
        <i class="ri-error-warning-fill notification-icon"></i>
        <strong>${translateTemplate(n.template)}</strong>
      </div>
      <p class="mb-1 small text-dark">
        ${n.payload?.equipment_name ? `<strong>${n.payload.equipment_name}</strong><br>` : ""}
        ${n.payload?.message || n.message}
      </p>

      <p class="text-muted small mb-0">${timeAgo(n.created_at)}</p>
    `;
    list.appendChild(div);
  });
}

// ‚ùå ‡∏õ‡∏¥‡∏î‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô (mark as read)
async function dismissNotification(id) {
  const card = document.querySelector(
    `.notification-card button[onclick="dismissNotification(${id})"]`
  )?.closest(".notification-card"); // ‡∏´‡∏≤ card ‡∏ó‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà   

  const count = document.getElementById("notifCount"); // ‡∏ß‡∏á‡∏Å‡∏•‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
  const list = document.getElementById("notifList"); // ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

  if (card) {
    // fade out effect
    card.style.transition = "opacity 0.3s ease";
    card.style.opacity = "0";

    // ‡∏£‡∏≠‡πÉ‡∏´‡πâ fade ‡∏à‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏•‡∏ö
    setTimeout(() => {
      card.remove();        

      const remaining = list.querySelectorAll(".notification-card").length;

      if (remaining > 0) {
        count.textContent = remaining;   // ‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡πÄ‡∏•‡∏Ç‡πÉ‡∏´‡∏°‡πà
        count.classList.remove("d-none");      // ‚úÖ ‡πÑ‡∏°‡πà‡∏ã‡πà‡∏≠‡∏ô‡∏ß‡∏á‡∏Å‡∏•‡∏°
        count.style.display = "inline-block"; // ‡πÉ‡∏´‡πâ‡πÇ‡∏ä‡∏ß‡πå‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏•‡∏≠‡∏î
      } else {
        count.textContent = "0";         // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏•‡∏Ç 0
        count.classList.remove("d-none"); // ‚úÖ ‡πÑ‡∏°‡πà‡∏ã‡πà‡∏≠‡∏ô‡∏ß‡∏á‡∏Å‡∏•‡∏°
        count.style.display = "inline-block"; // ‡πÉ‡∏´‡πâ‡πÇ‡∏ä‡∏ß‡πå‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏•‡∏≠‡∏î
        list.innerHTML = `<div class="empty-msg">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà</div>`;
      }
    }, 300);
  }

  // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
  await fetch(`/api/notifications/dismiss/${id}`, { method: "POST" });

} 

// ‚è± ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô "7m ago"
function timeAgo(datetimeStr) {
  const now = new Date();
  const past = new Date(datetimeStr);
  const diff = Math.floor((now - past) / 60000);
  if (diff < 1) return "Just now";
  if (diff < 60) return `${diff}m ago`;
  const hours = Math.floor(diff / 60);
  if (hours < 24) return `${hours}h ago`;
  return `${Math.floor(hours / 24)}d ago`;
}

// üõé toggle dropdown
document.addEventListener("DOMContentLoaded", () => {
  const bell = document.getElementById("notifBell");
  const dropdown = document.getElementById("notifDropdown");

  if (!bell || !dropdown) return;

  bell.addEventListener("click", () => {
    dropdown.style.display = (dropdown.style.display === "none" ? "block" : "none");
    loadNotifications();
  });

  // ‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ô‡∏≠‡∏Å‡∏Å‡∏£‡∏≠‡∏ö
  document.addEventListener("click", (e) => {
    if (!bell.contains(e.target) && !dropdown.contains(e.target)) {
      dropdown.style.display = "none";
    }
  });

  // ‡πÇ‡∏´‡∏•‡∏î‡∏ó‡∏∏‡∏Å 60 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
  loadNotifications();
  setInterval(loadNotifications, 60000);
});
